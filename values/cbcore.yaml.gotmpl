OperationsCenter:
  Resources:
    Limits:
      Memory: 6G
      Cpu: 3
    Requests:
      Memory: 6G
      Cpu: 3
  Platform: {{ .Values.platform }}
  HostName: {{ .Values.domain }} 
  Name: {{ .Values.cjoc.path }}
  Ingress:
    Annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls:
      Enable: {{ .Values.https.enabled }}
      Host: {{ .Values.domain }} 
      SecretName: tls-cbcore
  ServiceType: ClusterIP
  #ServiceAnnotations:
  #  prometheus.io/scheme: 'http'
  #  prometheus.io/path: '/cjoc/prometheus'
  #  prometheus.io/port: '8080'
  #  prometheus.io/scrape: 'true'
  JavaOpts:
    -Djenkins.install.runSetupWizard=false
    -Dcb.IMProp.fsProfiles=/usr/share/jenkins/fsProfile/custom-profile.json
    -Dcom.cloudbees.opscenter.clouds.kubernetes.KubernetesConfiguration.autoconfigure=false
    -Dcom.cloudbees.masterprovisioning.kubernetes.KubernetesMasterProvisioning.deleteClaim={{ .Values.cjoc.cleanupPvcOnMasterDeletion }}
  ContainerEnv:
    - name: ldap_manager_pw
      value: {{ .Values.ldapGlobalPassword }}
    - name: CASC_JENKINS_CONFIG
      value: /var/jenkins_config/jcasc
  ExtraGroovyConfiguration:
    01-use-rbac.groovy: |
      {{- readFile "groovy/oc-custom-groovy/use-rbac.groovy" | nindent 6 }}
    02-enforce-master-checkboxes.groovy: |
      {{- readFile "groovy/oc-custom-groovy/enforce-master-checkboxes.groovy" | nindent 6 }}
    04-create-k8s-secret-with-jenkins-token.groovy: |
      {{- readFile "groovy/oc-custom-groovy/create-k8s-secret-with-jenkins-token.groovy" | nindent 6 }}
    05-set-casc-bundle-visibility.groovy: |
      {{- readFile "groovy/oc-custom-groovy/set-casc-bundle-visibility.groovy" | nindent 6 }}
  ExtraConfigMaps:
    - name: apply-license
      data:
        apply-license.groovy: |
          import hudson.security.*
          import jenkins.model.*
          import java.util.logging.Logger
          import hudson.license.LicenseManager
          import hudson.model.UpdateSite
          import hudson.PluginWrapper
          Logger logger = Logger.getLogger("apply-license.groovy")
          logger.info("-----> LICENSE <-----")
          LicenseManager lm = LicenseManager.getInstance()
          String key = """ 
          {{ .Values.license.key | indent 10 }}
          """
          String certificate = """
          {{ .Values.license.cert | indent 10 }}
          """
          lm.setLicense(key, certificate)
    - name: fsprofile
      data:
        custom-profile.json: |
          { "plugins": {{ .Values.cjoc.initialCapPlugins | toJson }} }
    - name: jcasc
      data:
        jenkins.yaml: |
          jenkins:
            clouds:
            - kubernetes:
                containerCap: 10
                containerCapStr: "10"
                maxRequestsPerHost: 32
                maxRequestsPerHostStr: "32"
                name: "kubernetes"
            remotingSecurity:
              enabled: true
            crumbIssuer:
              standard:
                excludeClientIPFromCrumb: true
            numExecutors: 0
            securityRealm:
              ldap:
                configurations:
                - displayNameAttributeName: "cn"
                  groupMembershipStrategy:
                    fromGroupSearch:
                      filter: "member={0}"
                  groupSearchBase: "ou=Groups"
                  inhibitInferRootDN: false
                  managerDN: "cn=admin,dc=example,dc=org"
                  managerPasswordSecret: {{ .Values.ldapGlobalPassword }}
                  rootDN: "dc=example,dc=org"
                  server: "ldap://ldap-openldap.ldap.svc.cluster.local:389"
                  userSearchBase: "ou=People"
                disableMailAddressResolver: false
                groupIdStrategy: "caseInsensitive"
                userIdStrategy: "caseInsensitive"
          masterprovisioning:
            kubernetes:
              disk: 5
              memory: 4096
          unclassified:
            experimentalPlugins:
              enabled: false
            location:
              adminAddress: "{{ .Values.adminEmail }}"
    - name: mm-custom-groovy
      data:
        10-apply-rbac-to-appid-folders.groovy: |
          {{- readFile "groovy/mm-custom-groovy/apply-rbac-to-appid-folders.groovy" | nindent 10 }}
  ExtraVolumes:
  - name: extra-plugins
    persistentVolumeClaim:
      claimName: plugins-dir-pvc-{{ .Values.cloudbeesCoreAppVersion }}
  - name: apply-license
    configMap:
      name: apply-license
      defaultMode: 420
  - name: fsprofile
    configMap:
      name: fsprofile
      defaultMode: 420
  - name: jcasc
    configMap:
      name: jcasc
      defaultMode: 420
  ExtraVolumeMounts:
  - name: extra-plugins
    mountPath: /usr/share/jenkins/ref/plugins
    readOnly: true
  - name: apply-license
    mountPath: /var/jenkins_config/init.groovy.d
    readOnly: true
  - name: fsprofile
    mountPath: /usr/share/jenkins/fsProfile
    readOnly: true
  - name: jcasc
    mountPath: /var/jenkins_config/jcasc
    readOnly: true
Agents:
  SeparateNamespace:
    Enabled: true
    Create: true
